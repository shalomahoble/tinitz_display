              Container(
                width: double.infinity,
                height: SizeConfig.screenheigth! * 0.2,
                padding: const EdgeInsets.symmetric(horizontal: 39),
                decoration: const BoxDecoration(
                  image: DecorationImage(
                    image: NetworkImage(
                      'https://images.pexels.com/photos/57980/pexels-photo-57980.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
                    ),
                  ),
                  borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(10),
                      topRight: Radius.circular(10)),
                ),
              ),



  case 'image':
        return const SectionImage();
      case 'html':
        return SectionHtml(webViewControllerBody: webViewControllerBody);
      case 'video':
        return SectionVideo(videoController: videoController);


         CarouselSlider(
                  options: CarouselOptions(
                    height: SizeConfig.screenheigth! * 0.925,
                    scrollDirection: Axis.horizontal,
                    viewportFraction: 1.0,
                    autoPlay: true,
                    autoPlayInterval: const Duration(seconds: 4),
                  ),
                  // ignore: invalid_use_of_protected_member
                  items: Get.find<LoginController>()
                      .borne
                      .value
                      .slides!
                      .map<Widget>((item) {
                    return TitrologieSlider(slide: item);
                  }).toList(),
                ),
              ),
              Obx(
                () => Header(
                  site: Get.find<LoginController>().borne.value.site!,
                ),
              ),



              begin: const Offset(0, 3),
                end: const Offset(0, -0.06),



                 
      Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Expanded(
            child: Row(
              children: [
                ClipRRect(
                  borderRadius: const BorderRadius.only(
                    topLeft: Radius.circular(7),
                    bottomLeft: Radius.circular(7),
                  ),
                  child: CachedNetworkImage(
                    width: SizeConfig.blockHorizontal! * 20,
                    height: double.infinity,
                    imageUrl: article.image,
                    fit: BoxFit.cover,
                  ),
                ),
                Container(
                  alignment: AlignmentDirectional.center,
                  height: SizeConfig.blockHorizontal! * 27,
                  width: SizeConfig.blockHorizontal! * 52,
                  padding:
                      EdgeInsets.only(left: SizeConfig.blockHorizontal! * 2),
                  child: Text(
                    article.title,
                    style: flashInfoTitleStyle.copyWith(
                      color: Colors.grey.shade800,
                      fontSize: 15,
                    ),
                    maxLines: 5,
                    overflow: TextOverflow.ellipsis,
                  ),
                ),
              ],
            ),
          ),
          /* Expanded(
            child: Container(
              padding: EdgeInsets.symmetric(
                  horizontal: SizeConfig.blockHorizontal! * 2),
              alignment: AlignmentDirectional.bottomCenter,
              child: Text(
                "Pour lire l'article dans son entièreté, scarnner le code Qr.",
                style: scannerSubTitleStyle.copyWith(
                  color: Colors.black,
                  fontSize: 10,
                  fontWeight: FontWeight.w500,
                ),
                maxLines: 4,
              ),
            ),
          ), */
          Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              SizedBox(
                height: SizeConfig.blockHorizontal! * 15,
                child: QrImageView(
                  padding: EdgeInsets.zero,
                  backgroundColor: Colors.white,
                  data: article.url,
                ),
              ),
              SizedBox(
                width: 30,
                child: Text(
                  "Scanner pour lire plus.",
                  style: scannerSubTitleStyle.copyWith(
                    color: Colors.black,
                    fontSize: 10,
                    fontWeight: FontWeight.w500,
                  ),
                  maxLines: 4,
                ),
              ),
            ],
          )
        ],
      )


        void startTimerForNextArticle() {
    final visibleArticles = loginController.getArticle();

    /*  print("je suis visible $visibleArticles");*/
    
    if (visibleArticles.isNotEmpty) {
      Future.delayed(visibleArticles[currentIndex.value].seconde(), () {
        print(currentIndex.value);

        final currentArticle = visibleArticles[currentIndex.value];
        currentIndex.value = (currentIndex.value + 1) % visibleArticles.length;
        elementChangeCount.value++; // Incrémente le compteur
        startTimerForNextArticle();

      });
    }
  }

  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vZGV2bWFya2V0LmVnYXouc2hvcC9hcGkvYXV0aC9yZWZyZXNoIiwiaWF0IjoxNjkzMjM4OTg2LCJleHAiOjE2OTMyNDI2MDIsIm5iZiI6MTY5MzIzOTAwMiwianRpIjoiVjRncGdDNmxuTjcwRzUwSiIsInN1YiI6IjciLCJwcnYiOiI2YjVhYjcyNDg0MzY3ZWJlYzYyNjMxMmE0NTI1NTM0Yjk1MTQyZTBkIn0.BQOQMWguIppxmB4-q3kwMqJWwQooyXmkK2aFKkZ0c70



  Text("00001 - Pierre", style: flashInfoTextStyle),
              Expanded(
                  child: Container(
                width: 10,
                height: 2,
                margin: const EdgeInsets.symmetric(horizontal: 10),
                decoration: const BoxDecoration(
                  color: Colors.black,
                ),
              )),
              Text(
                "Caisse 02",
                style: flashInfoTextStyle.copyWith(
                  fontWeight: FontWeight.w800,
                ),
              ),


              class FlashArticle extends StatelessWidget {
  const FlashArticle({
    Key? key,
    required this.article,
  }) : super(key: key);

  final Article article;

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.symmetric(
        vertical: SizeConfig.blockHorizontal! * 1,
        horizontal: SizeConfig.blockHorizontal! * 1,
      ),
      height: SizeConfig.blockHorizontal! * 20,
      decoration: const BoxDecoration(
        color: Colors.red,
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          ClipRRect(
            borderRadius: BorderRadius.circular(10),
            child: CachedNetworkImage(
              imageUrl: article.image,
              fit: BoxFit.cover,
              height: SizeConfig.blockHorizontal! * 20,
              width: SizeConfig.blockHorizontal! * 20,
              placeholder: (context, url) =>
                  LoadingAnimationWidget.fourRotatingDots(
                color: KOrange,
                size: 45,
              ),
              errorWidget: (context, url, error) => Image.asset(
                "assets/images/error.png",
                fit: BoxFit.cover,
                height: SizeConfig.blockHorizontal! * 20,
                width: SizeConfig.blockHorizontal! * 20,
              ),
            ),
          ),
          Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              SizedBox(
                width: SizeConfig.blockHorizontal! * 55,
                child: Text(
                  article.title,
                  style: flashInfoTitleStyle.copyWith(
                    color: Colors.white,
                    fontSize: 15,
                  ),
                  textAlign: TextAlign.justify,
                  overflow: TextOverflow.ellipsis,
                  maxLines: 5,
                ),
              ),
              SponsorWidget(
                source: article.source,
                sponsor: article.nomSponsor,
                nomSponsor: article.nomSponsor,
                logoSponsor: article.logoSponsor,
              )
            ],
          ),
          Container(
            width: SizeConfig.blockHorizontal! * 20,
            alignment: Alignment.center,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                QrImageView(
                  size: SizeConfig.blockHorizontal! * 12,
                  padding: EdgeInsets.zero,
                  backgroundColor: Colors.white,
                  data: codeQr("article=${article.id}", article.pivot.borneId!),
                ),
                SizedBox(height: SizeConfig.blockHorizontal! * 1),
                SizedBox(
                  width: SizeConfig.blockHorizontal! * 15,
                  child: Text(
                    "Scanner le Qr Code pour lire plus l'article",
                    style: scannerSubTitleStyle.copyWith(
                      color: Colors.white,
                      fontSize: 10,
                      fontWeight: FontWeight.w500,
                    ),
                    maxLines: 4,
                    textAlign: TextAlign.center,
                    overflow: TextOverflow.ellipsis,
                  ),
                )
              ],
            ),
          )
        ],
      ),
    );
  }
}